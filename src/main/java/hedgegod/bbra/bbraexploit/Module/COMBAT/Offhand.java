package hedgegod.bbra.bbraexploit.Module.COMBAT;

import hedgegod.bbra.bbraexploit.Module.Module;
import hedgegod.bbra.bbraexploit.BBraExploit;
import hedgegod.bbra.bbraexploit.utils.InventoryUtil;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.inventory.GuiInventory;
import net.minecraft.init.Items;
import net.minecraft.inventory.ClickType;
import net.minecraft.inventory.Container;
import net.minecraft.item.*;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import org.lwjgl.input.Keyboard;
import yea.hedgegod.clickgui.Setting;

import java.util.ArrayList;
import java.util.Objects;

public class Offhand extends Module {
    static Minecraft mc = Minecraft.getMinecraft( );

    public Offhand() {
        super("Offhand", Keyboard.KEY_NONE, Category.COMBAT);

        ArrayList<String> options = new ArrayList<>( );

        options.add("Crystal");
        options.add("Totem");
        options.add("Golden Apple");

        BBraExploit.instance.sManager.rSetting(new Setting("Mode", this, options, "Mode"));

        BBraExploit.instance.sManager.rSetting(new Setting("TotemHP", this, 16, 0, 36, true));
        BBraExploit.instance.sManager.rSetting(new Setting("SwordGap", this, true));
        BBraExploit.instance.sManager.rSetting(new Setting("CrystalCheck", this, false));
    }


    private final int OFFHAND = 45;

    @SubscribeEvent
    public void onPlayerTick(TickEvent.PlayerTickEvent e) {
        try {
            String Mode = BBraExploit.instance.sManager.getSettingByName(this.name, "Mode").getValString( );
            if (mc.currentScreen == null || mc.currentScreen instanceof GuiInventory) {

                if (Objects.equals(Mode, "Crystal")) {
                    if (mc.player.getHealth( ) + mc.player.getAbsorptionAmount( ) >= BBraExploit.instance.sManager.getSettingByName(this.name, "TotemHP").getValDouble( ) &&
                            !(((BBraExploit.instance.sManager.getSettingByName(this.name, "SwordGap").getValBoolean( ) &&
                                    mc.player.getHeldItemMainhand( ).getItem( ) instanceof ItemSword)) &&
                                    mc.gameSettings.keyBindUseItem.isKeyDown( ) &&
                                    BBraExploit.instance.sManager.getSettingByName(this.name, "SwordGap").getValBoolean( ))) {
                        Item offhand = mc.player.getHeldItemOffhand( ).getItem( );
                        if (InventoryUtil.getItemCount(mc.player.inventoryContainer, Items.END_CRYSTAL) > 0 && !offhand.equals(Items.END_CRYSTAL)) {
                            InventoryUtil.swapSlots(InventoryUtil.getItemSlot(mc.player.inventoryContainer, Items.END_CRYSTAL), OFFHAND);
                        }
                        return;
                    }
                }
                if (Objects.equals(Mode, "Golden Apple")) {
                    if (mc.player.getHealth( ) + mc.player.getAbsorptionAmount( ) >= BBraExploit.instance.sManager.getSettingByName(this.name, "TotemHP").getValDouble( )) {
                        Item offhand = mc.player.getHeldItemOffhand( ).getItem( );
                        if (InventoryUtil.getItemCount(mc.player.inventoryContainer, Items.GOLDEN_APPLE) > 0 && !offhand.equals(Items.GOLDEN_APPLE)) {
                            InventoryUtil.swapSlots(InventoryUtil.getItemSlot(mc.player.inventoryContainer, Items.GOLDEN_APPLE), OFFHAND);
                        }
                    }
                }
                if (Objects.equals(Mode, "Totem")) {
                    if (mc.player.getHealth( ) + mc.player.getAbsorptionAmount( ) >= BBraExploit.instance.sManager.getSettingByName(this.name, "TotemHP").getValDouble( ) &&
                            !(((BBraExploit.instance.sManager.getSettingByName(this.name, "SwordGap").getValBoolean( ) &&
                                    mc.player.getHeldItemMainhand( ).getItem( ) instanceof ItemSword)) &&
                                    mc.gameSettings.keyBindUseItem.isKeyDown( ) &&
                                    BBraExploit.instance.sManager.getSettingByName(this.name, "SwordGap").getValBoolean( ))) {
                        Item offhand = mc.player.getHeldItemOffhand( ).getItem( );
                        if (InventoryUtil.getItemCount(mc.player.inventoryContainer, Items.TOTEM_OF_UNDYING) > 0 && !offhand.equals(Items.TOTEM_OF_UNDYING)) {
                            InventoryUtil.swapSlots(InventoryUtil.getItemSlot(mc.player.inventoryContainer, Items.TOTEM_OF_UNDYING), OFFHAND);
                        }
                    }
                }
                if (BBraExploit.instance.sManager.getSettingByName(this.name, "SwordGap").getValBoolean( ) &&
                        mc.player.getHealth( ) + mc.player.getAbsorptionAmount( ) >= BBraExploit.instance.sManager.getSettingByName(this.name, "TotemHP").getValDouble( ) &&
                        mc.player.getHeldItemMainhand( ).getItem( ) instanceof ItemSword &&
                        mc.gameSettings.keyBindUseItem.isKeyDown( )
                    //Mouse.isButtonDown(3)
                ) {
                    Item offhand = mc.player.getHeldItemOffhand( ).getItem( );
                    if (InventoryUtil.getItemCount(mc.player.inventoryContainer, Items.GOLDEN_APPLE) > 0 && !offhand.equals(Items.GOLDEN_APPLE)) {
                        InventoryUtil.swapSlots(InventoryUtil.getItemSlot(mc.player.inventoryContainer, Items.GOLDEN_APPLE), OFFHAND);
                    }
                }
            }
            if (mc.player.getHealth( ) + mc.player.getAbsorptionAmount( ) <= BBraExploit.instance.sManager.getSettingByName(this.name, "TotemHP").getValDouble( )) {
                Item offhand = mc.player.getHeldItemOffhand( ).getItem( );

                if (InventoryUtil.getItemCount(mc.player.inventoryContainer, Items.TOTEM_OF_UNDYING) > 0 && !offhand.equals(Items.TOTEM_OF_UNDYING)) {
                    InventoryUtil.swapSlots(mc.player.inventory.currentItem, OFFHAND); //it works too slow and may cause to die
                    InventoryUtil.swapSlots(InventoryUtil.getItemSlot(mc.player.inventoryContainer, Items.TOTEM_OF_UNDYING), OFFHAND);
                }
            }
        } catch (Exception exc) {

        }
    }
}