package hedgegod.bbra.bbraexploit.Module.COMBAT;

import hedgegod.bbra.bbraexploit.Module.Module;
import hedgegod.bbra.bbraexploit.utils.MainUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.entity.monster.EntityMob;
import net.minecraft.entity.passive.EntityAnimal;
import net.minecraft.entity.passive.EntityVillager;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.RayTraceResult;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;

import java.util.ArrayList;
import java.util.UUID;

public class TriggerBot extends Module {
    ArrayList<UUID> friends = new ArrayList<UUID>();
    private Entity entity;
    boolean isTarget=true;
    boolean players=true;
    boolean monsters=true;
    boolean animals=true;
    boolean ignoreVillagers = true;
    boolean ignoreTeammates = true;
    boolean useCrits = false;

    public TriggerBot(){
        super ("Trigger Bot", Keyboard.KEY_NONE, Category.COMBAT);
    }

    public boolean isFriend(UUID target, ArrayList<UUID> list) {
        for (UUID id : list) {
            if (id == target) {
                return true;
            } else {
                return false;
            }
        }
        return false;
    }

    public void removeFromList(UUID target, ArrayList<UUID> list){
        for (int i = 0;i<list.size();i++){
            if(list.get(i) == target){
                list.remove(i);
            }
        }
    }
    @SubscribeEvent
    public void onPlayerTick(TickEvent.PlayerTickEvent e){
        RayTraceResult objectMouseOver = Minecraft.getMinecraft().objectMouseOver;

        if(objectMouseOver != null){
            if (objectMouseOver.typeOfHit == RayTraceResult.Type.ENTITY){
                entity = objectMouseOver.entityHit;

                if (players && entity instanceof EntityPlayer){
                    if(Mouse.isButtonDown(2)){
                        if (!isFriend(entity.getUniqueID(), friends)){
                            friends.add(entity.getUniqueID());
                        }
                    }
                    if(ignoreTeammates && !entity.isOnSameTeam(mc.player)) {
                        isTarget = true;
                        useCrits = true;
                    }
                } else if (animals && entity instanceof EntityAnimal) {
                    isTarget = true;
                } else if (monsters && entity instanceof EntityMob) {
                    isTarget = true;
                }
                if (ignoreVillagers && entity instanceof EntityVillager){
                    isTarget = false;
                }
                if(isTarget && !isFriend(entity.getUniqueID(), friends)) {
                    if (useCrits && mc.player.onGround) {
//                        mc.player.motionY = 0.30;
                    	mc.player.connection.sendPacket(new CPacketPlayer.Position(0,0.2,0,true));
                    }
                    if (Minecraft.getMinecraft().player.getCooledAttackStrength(0) == 1) {
                    	mainUtils.attack(this.entity);
                    }
                }
            }
        }
    }
}