package hedgegod.bbra.bbraexploit.Module.RENDER;

import hedgegod.bbra.bbraexploit.Client;
import hedgegod.bbra.bbraexploit.Module.Module;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.gui.ScaledResolution;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.lwjgl.input.Keyboard;

import java.security.Key;

import static hedgegod.bbra.bbraexploit.UI.ui.rainbow;

public class ArrayList extends Module {
    public ArrayList(){
        super("Array List", Keyboard.KEY_NUMPAD7, Category.RENDER);
    }

    @SubscribeEvent
    public void onRender(RenderGameOverlayEvent.Post e) {
        switch (e.getType()) {
            case TEXT:
                int y = 10;
                final int[] counter = {1};

                Minecraft mc = Minecraft.getMinecraft();
                FontRenderer fr = mc.fontRenderer;
                ScaledResolution sr = new ScaledResolution(mc);

                boolean isRainbow = true;
                boolean isRectangled = true;
                int color = -1;

                if (toggled) {
                    for (Module module : Client.modules) {
                        if (module.toggled) {

                            if (isRainbow) {
                                color = rainbow(counter[0] * 50);
                            } else {
                                color = -1;
                            }

                            if(isRectangled){
                            Gui.drawRect(sr.getScaledWidth(), y, sr.getScaledWidth() - 2, y + 10, color);
                            }

                            fr.drawStringWithShadow(module.name, sr.getScaledWidth() - 3 - fr.getStringWidth(module.name), y, color);
                            y += 10;
                            counter[0]++;

                        }
                    }
                }
            default:
                break;
        }
    }
}
