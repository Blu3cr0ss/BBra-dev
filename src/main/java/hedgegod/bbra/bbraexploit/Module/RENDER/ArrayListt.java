package hedgegod.bbra.bbraexploit.Module.RENDER;

import hedgegod.bbra.bbraexploit.BBraExploit;
import hedgegod.bbra.bbraexploit.Client;
import hedgegod.bbra.bbraexploit.Module.Module;
import hedgegod.bbra.bbraexploit.utils.RenderUtil;
import font.FontUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.gui.ScaledResolution;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.lwjgl.input.Keyboard;
import yea.hedgegod.clickgui.Setting;

import java.awt.*;
import java.util.ArrayList;
import java.util.Objects;

import static hedgegod.bbra.bbraexploit.UI.ui.rainbow;

public class ArrayListt  {

    final int[] counter = {1};

    @SubscribeEvent
    public void onRender(RenderGameOverlayEvent.Post e) {
        switch (e.getType()) {
            case TEXT:
                int y = 10;
                counter[0]++;

                Minecraft mc = Minecraft.getMinecraft();
                FontRenderer fr = mc.fontRenderer;
                ScaledResolution sr = new ScaledResolution(mc);

                boolean toggled = (HUD.isEnabledVar.isEnabed() && BBraExploit.instance.sManager.getSettingByName("HUD", "ArrayList").getValBoolean());
                int color = (HUD.isEnabledVar.isEnabed() && (BBraExploit.instance.sManager.getSettingByName("HUD", "AL Mode").getValString().equals("Rainbow")))? rainbow(counter[0] * 20) : Color.orange.getRGB();
                int offset = 10;

                if (toggled) {
                    for (Module module : Client.modules) {
                        if (module.toggled) {

                            if ((HUD.isEnabledVar.isEnabed() && Objects.equals(BBraExploit.instance.sManager.getSettingByName("HUD", "AL Mode").getValString(), "Rainbow"))) {
                                FontUtils.normal.drawStringWithShadow(module.name, sr.getScaledWidth() - 3 - FontUtils.normal.getStringWidth(module.name), y, color);
                                mc.fontRenderer.drawStringWithShadow("", sr.getScaledWidth() - 3 - mc.fontRenderer.getStringWidth(""), y, color);
                                Gui.drawRect(sr.getScaledWidth(), y - 4, sr.getScaledWidth() - 2, y + 6, color);
                            }

                            else {
                                offset = 12;
                                RenderUtil.drawRoundedRect(sr.getScaledWidth() - 6 - FontUtils.normal.getStringWidth(module.name), y - 5, sr.getScaledWidth(), y + 5, 5, new Color(0x8653E1).hashCode());
                                FontUtils.normal.drawStringWithShadow(module.name, sr.getScaledWidth() - 3 - FontUtils.normal.getStringWidth(module.name), y, Color.orange.getRGB());
                            }
                            y += offset;
                        }
                    }
                }
            default:
                break;
        }
    }
}
