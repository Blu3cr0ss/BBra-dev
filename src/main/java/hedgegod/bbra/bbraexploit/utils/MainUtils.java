package hedgegod.bbra.bbraexploit.utils;

import java.lang.reflect.Method;
import java.util.Comparator;
import java.util.concurrent.TimeUnit;

import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.EnumHand;
import net.minecraft.util.datafix.fixes.MinecartEntityTypes;
import net.minecraft.util.math.MathHelper;


public class MainUtils {

    private Minecraft mc = Minecraft.getMinecraft();
	
    public float[] rotations(EntityPlayer entity) {    // Look to player (eyes)
        double x = entity.posX - mc.player.posX;
        double y = entity.posY - (mc.player.posY + entity.getEyeHeight());
        double z = entity.posZ - mc.player.posZ;

        double u = MathHelper.sqrt(x * x + z * z);

        float u2 = (float) (MathHelper.atan2(z, x) * (180D / Math.PI) - 90.0F); // yaw
        float u3 = (float) (-MathHelper.atan2(y, u) * (180D / Math.PI)); // pitch

        
        
        return new float[]{u2, u3};
    }
    
    public void attack(Entity target) {
        mc.playerController.attackEntity(mc.player, target);
        mc.player.swingArm(EnumHand.MAIN_HAND);
        mc.player.resetCooldown();
    }
    public void attack(Entity target, EnumHand hand) {
        mc.playerController.attackEntity(mc.player, target);
        mc.player.swingArm(hand);
        mc.player.resetCooldown();
    }
	public EntityPlayer getEnemyPlayer(double range) {
		return mc.world.playerEntities.stream().filter(entityPlayer -> entityPlayer != mc.player)
				.min(Comparator.comparing(entityPlayer ->entityPlayer.getDistance(mc.player)))
				.filter(entityPlayer -> entityPlayer.getDistance(mc.player) <= range)
				.orElse(null);
	}
}
