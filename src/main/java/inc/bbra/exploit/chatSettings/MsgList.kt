package inc.bbra.exploit.chatSettings

import inc.bbra.exploit.config.ConfigManager
import inc.bbra.exploit.utils.ChatUtil
import java.io.File


object MsgList {
    var messages = hashMapOf<String, (List<String>) -> Unit>()

    init {
        addMsg("cfg") { msg ->
            when (msg[1]) {
                "list" -> {
                    ChatUtil.sendMessage("List of configs: ")
                    getListOfConfigs().filter { el ->
                        el.removeSuffix(".${ConfigManager.postfix}") != "binds"
                    }.forEach {
                        ChatUtil.sendMessage(it.removeSuffix(".${ConfigManager.postfix}"))
                    }
                }
                "load" -> {
                    var cfgFinded = false
                    for (i in getListOfConfigs()) {
                        if (i.removeSuffix(".${ConfigManager.postfix}") == msg[2]) {
                            ConfigManager.setOtherCfg(msg[2])
                            ChatUtil.sendMessage("Config ${msg[2]} loaded!")
                            cfgFinded = true
                            break
                        }
                    }
                    if (!cfgFinded) {
                        ChatUtil.sendMessage("Config not found!")
                    }
                }
            }
        }
        addMsg("help") {
            ChatUtil.sendMessage("List of commands")
            messages.forEach {
                ChatUtil.sendMessage(it.key)
            }
        }
    }
}

fun getListOfConfigs(): List<String> {
    try {
        return File("BBraExploit/config").listFiles().map { it.name }.filter { it != "binds.json" }
    } catch (e: Exception) {

    }
    return emptyList()
}

fun addMsg(msg: String, f: (List<String>) -> Unit) {
    MsgList.messages.put(msg, f)
}