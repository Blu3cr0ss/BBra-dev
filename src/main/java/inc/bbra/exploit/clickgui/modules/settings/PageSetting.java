package inc.bbra.exploit.clickgui.modules.settings;

import inc.bbra.exploit.Module.Module;
import inc.bbra.exploit.clickgui.GUI;
import inc.bbra.exploit.clickgui.UtilGui;
import inc.bbra.exploit.clickgui.modules.ModButton;
import inc.bbra.exploit.clickgui.modules.ModCategory;
import inc.bbra.exploit.utils.ChatUtil;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.Gui;

import java.awt.*;
import java.util.ArrayList;

public class PageSetting {
    public static ArrayList<PageSetting> pageList = new ArrayList<PageSetting>( );
    Module module;
    ModButton button;
    ArrayList<SettingAbstract> settings = new ArrayList<SettingAbstract>( );
    String name;
    ///////////////////////////////
    public int h = 15;
    public int w = 100;
    public int x, y;
    int settingsCount;
    int margin = 2;

    public PageSetting(Module module, String name) {
        this.module = module;
        this.name = name;
        module.havePages = true;
        module.pages.add(this);
        pageList.add(this);
    }

    public void searchMyButton() {
        for (ModButton i : GUI.INSTANCE.getModButtons( )) {
            if (i.m == module) {
                button = i;
            }
        }
    }

    public void draw() {
        try {
            Minecraft.getMinecraft( ).fontRenderer.drawString(name, x + 5, y, Color.WHITE.hashCode( ));
            Gui.drawRect(x, button.y + button.h + PositionManager.pageMargin+h+margin, button.x + button.w - 3, button.y + button.h + PositionManager.pageMargin +h+margin +1, button.getBorderColor());
            if (settings != null) {
                for (SettingAbstract setting : settings) {
                    setting.x = setting.button.x + 3;
                    setting.y = setting.button.y + setting.button.h + margin + 1 + (settingsCount * setting.h);
                    if (setting.module.havePages) {
                        setting.y += setting.module.pages.get(0).h + margin;
                    }
                    setting.draw( );
                    settingsCount += 1;
                    PositionManager.pageMargin = setting.y - (button.y + button.h);
                }
            }
            settingsCount = 0;
        } catch (Exception e) {
            e.printStackTrace( );
        }
    }

    public void onClick(int mouseX, int mouseY, int button) {
        try {
            if (UtilGui.isClicked(mouseX, mouseY, button, x, y, w, h, UtilGui.MOUSEBUTTON.LEFT) && this.button.parentCategoryDeployed && this.button.m.isDeployed) {
                if (this.module.pages.indexOf(this) == this.module.pageSeenRN) {
                    if (this.module.pageSeenRN + 1 == this.module.pages.size( )) {
                        this.module.pageSeenRN = 0;
                    } else {
                        this.module.pageSeenRN += 1;
                    }
                    module.pageSwitched = true;
                }
            }
        } catch (Exception e) {
            e.printStackTrace( );
        }
    }
}