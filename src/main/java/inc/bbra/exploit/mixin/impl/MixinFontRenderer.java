package inc.bbra.exploit.mixin.impl;


import inc.bbra.exploit.BBraExploit;
import inc.bbra.exploit.Module.CLIENT.CustomFont;
import inc.bbra.font.FontUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.gui.GuiMultiplayer;
import net.minecraft.client.gui.GuiScreenServerList;
import net.minecraft.client.gui.GuiWorldSelection;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;

@Mixin(FontRenderer.class)
public class MixinFontRenderer {

    @Inject(method = "drawString(Ljava/lang/String;III)I",at= @At("HEAD"),cancellable = true)
    public void doCustomFont(String text, int x, int y, int color, CallbackInfoReturnable<Integer> cir){
        if (CustomFont.INSTANCE.isEnabled() && !(Minecraft.getMinecraft().currentScreen instanceof GuiMultiplayer || Minecraft.getMinecraft().currentScreen instanceof GuiWorldSelection)){
            cir.setReturnValue(FontUtils.normal.drawString(text,x-1,y+2,color));
        }
    }

    @Inject(method = "drawString(Ljava/lang/String;FFIZ)I",at=@At("HEAD"), cancellable = true)
    public void doCustomFontWithShadow(String text, float x, float y, int color, boolean dropShadow, CallbackInfoReturnable<Integer> cir){
        if (CustomFont.INSTANCE.isEnabled() && !(Minecraft.getMinecraft().currentScreen instanceof GuiMultiplayer || Minecraft.getMinecraft().currentScreen instanceof GuiWorldSelection)){
            if (dropShadow) {
                cir.setReturnValue(FontUtils.normal.drawStringWithShadow(text, x-1, y+2, color));
            }else {
                cir.setReturnValue(FontUtils.normal.drawString(text,x-1,y+2,color));
            }
        }
    }
}
