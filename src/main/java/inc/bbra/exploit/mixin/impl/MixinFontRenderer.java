package inc.bbra.exploit.mixin.impl;

import inc.bbra.exploit.Module.CLIENT.CustomFont;
import inc.bbra.font.FontUtils;
import net.minecraft.client.gui.FontRenderer;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.Redirect;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin(value = {FontRenderer.class})
public abstract class MixinFontRenderer {
    @Shadow
    public abstract int drawString(String text, int x, int y, int color);



    @Redirect(method = {"drawString*"}, at = @At("HEAD"))
    public float drawString(String text, float x, float y, int color, boolean dropShadow) {
        if (CustomFont.INSTANCE.isEnabled( )) {
            if (dropShadow) {
                return (float) FontUtils.normal.drawStringWithShadow(text, x, y, color);
            } else {
                return (float) FontUtils.normal.drawString(text, x, y, color);
            }
        } else {
            return drawString(text, (int) x, (int) y, color);
        }
    }

    @Redirect(method = {"drawString*"}, at = @At("HEAD"))
    public float drawString(String text, float x, float y, int color) {
        if (CustomFont.INSTANCE.isEnabled( )) {
            return (float) FontUtils.normal.drawString(text, x, y, color);
        } else {
            return drawString(text, (int) x, (int) y, color);
        }
    }
}