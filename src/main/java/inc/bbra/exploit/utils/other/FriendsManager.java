package inc.bbra.exploit.utils.other;

import inc.bbra.exploit.Client;
import inc.bbra.exploit.Module.Module;

import java.io.*;
import java.util.ArrayList;

public class FriendsManager {
    public static boolean doCheck = false;
    private static ArrayList<String> friends = new ArrayList<>();

    public static void addFriend(String target) throws IOException {
        friends.add(target);
        ConfigManager.saveFriendList();
    }

    public static void removeFriend(String target) throws IOException{
        for (int i = 0;i < friends.size();i++){
            if (friends.get(i) == target){
                friends.remove(i);
            }
        }
        ConfigManager.saveFriendList();
    }

    public static void toggleFriend(String target) throws IOException{
        if (isFriend(target)){
            removeFriend(target);
        } else {
            addFriend(target);
        }
    }
    public static void clearFriends() {
        friends.clear();
    }

    public static boolean isFriend(String target) {
        if(doCheck) {
            for (String friend : friends) {
                if (target == friend) {
                    return true;
                }
            }
        }
        return false;
    }

    public static int getNumFriends(){
        return friends.size();
    }

    public static class ConfigManager {

        public static ArrayList<String> ignoredModules = new ArrayList<>();

        public ConfigManager() throws FileNotFoundException {
        }
        public static void Init() {
            ignoredModules.add("Unload");
            ignoredModules.add("SelfDestruct");
            ignoredModules.add("FakePlayer");
            ignoredModules.add("KeyPearl");
            ignoredModules.add("Music");
            ignoredModules.add("HighJump");
            ignoredModules.add("KillAura");
            ignoredModules.add("CAura");
            try {
                File cfgFile = new File("cfg.txt");
                File setFile = new File("set.txt");
                File friendFile = new File("friends.txt");

                if (!cfgFile.exists())
                    cfgFile.createNewFile();
                if (!setFile.exists())
                    setFile.createNewFile();
                if (!friendFile.exists())
                    friendFile.exists();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        public static void saveActive() throws IOException {
            File cfgFile = new File("cfg.txt");
            if (cfgFile.exists()) {
                cfgFile.delete();
                cfgFile.createNewFile();
            }
            PrintWriter pw = new PrintWriter(cfgFile);
            for (Module m : Client.modules) {
                if (m.isEnabled() && !ignoredModules.contains(m.getName())) {
                    pw.println(m.getName());
                }
            }
            pw.close();
        }

        public static void loadFromCfg() throws IOException {
            BufferedReader br = new BufferedReader(new FileReader("cfg.txt"));
            String line;
            while ((line = br.readLine()) != null) {
                try {
                    if (!ignoredModules.contains(line))
                        Client.getHackByName(line).activate();
                } catch (Exception e){e.printStackTrace();}
            }
            br.close();
        }

        public static void saveFriendList() throws IOException{
            File friendFile = new File("friends.txt");
            if (friendFile.exists()) {
                friendFile.delete();
                friendFile.createNewFile();
            }
            PrintWriter pw = new PrintWriter(friendFile);
            for (String name : friends){
                pw.println(name);
            }
            pw.close();
        }

        public static void loadFriendList() throws IOException{
            BufferedReader br = new BufferedReader(new FileReader("friends.txt"));
            String fline;
            while ((fline = br.readLine()) != null) {
                try {
                    FriendsManager.addFriend(fline);
                } catch (Exception e){e.printStackTrace();}
            }
            br.close();
        }
    }
}