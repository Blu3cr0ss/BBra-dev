package inc.bbra.exploit.utils.other

import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.cancel
import kotlinx.coroutines.launch

fun setTimer(delay: Int, function: () -> Unit) = GlobalScope.launch {
    kotlinx.coroutines.delay((delay * 1000).toLong())
    function.invoke()
    this.cancel()
}

fun setInterval(delay: Int, function: () -> Unit) = GlobalScope.launch {
    while (true) {
        kotlinx.coroutines.delay((delay * 1000).toLong())
        function.invoke()
    }
}

fun setInterval(delay: Int, repeats: Int, function: () -> Unit) = GlobalScope.launch {
    for(i in 0 until repeats){
        kotlinx.coroutines.delay((delay * 1000).toLong())
        function.invoke()
    }
    this.cancel()
}